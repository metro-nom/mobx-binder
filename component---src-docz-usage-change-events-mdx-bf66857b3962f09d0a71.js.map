{"version":3,"sources":["webpack:///./src/docz/usage/change-events.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,kNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,yOACA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,4RAYL,qBAAG,0BAAYA,WAAW,KAAvB,YAAH,6JAAqN,0BAAYA,WAAW,KAAvB,cAArN,6B,gNAKJJ,EAAWK,gBAAiB","file":"component---src-docz-usage-change-events-mdx-bf66857b3962f09d0a71.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/carsten/Entwicklung/Projekte/metro/data/mobx-binder/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"change-events\"\n    }}>{`Change events`}</h1>\n    <p>{`Usually, to get aware of changes to field values, you might just want to observe them by yourself via the standard MobX mechanisms. But in some scenarios it might also be helpful to use the onChange() method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`public salutation = new TextField('salutation')\npublic fullName = new TextField('fullName')\n\nbinder\n    .forStringField(salutation)\n    .isRequired()\n    .withConverter(new MomentConverter('DD.MM.YYYY'))\n    .onChange(moment => console.log(moment.format()))\n    .bind()\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`onChange`}</inlineCode>{` events will only be fired if all validators specified before have been succeeding. It will pass a valid value of a type depending on the position of the `}<inlineCode parentName=\"p\">{`onChange()`}</inlineCode>{` call in the chain.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}